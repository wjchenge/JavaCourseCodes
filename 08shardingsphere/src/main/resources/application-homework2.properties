# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=order-0,order-1
# 数据库连接池类名称
spring.shardingsphere.datasource.order-0.type=com.zaxxer.hikari.HikariDataSource
# 数据库驱动类名
spring.shardingsphere.datasource.order-0.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库 URL 连接
spring.shardingsphere.datasource.order-0.jdbc-url=jdbc:mysql://localhost:3306/wj_order_0?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
# 数据库用户名
spring.shardingsphere.datasource.order-0.username=root
# 数据库密码
spring.shardingsphere.datasource.order-0.password=root

# 数据库连接池类名称
spring.shardingsphere.datasource.order-1.type=com.zaxxer.hikari.HikariDataSource
# 数据库驱动类名
spring.shardingsphere.datasource.order-1.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库 URL 连接
spring.shardingsphere.datasource.order-1.jdbc-url=jdbc:mysql://localhost:3306/wj_order_1?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
# 数据库用户名
spring.shardingsphere.datasource.order-1.username=root
# 数据库密码
spring.shardingsphere.datasource.order-1.password=root



# 标准分片表配置
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=order-$->{0..1}.t_order_$->{0..15}

# 分库策略

# 用于单分片键的标准分片场景
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database-inline

# 分片算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=order-$->{id % 2}

# 分布式序列策略配置
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

# 分表策略

# 用于单分片键的标准分片场景
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table-inline

# 分片算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_order_$->{user_id % 16}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=snowflake
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123



spring.shardingsphere.props.sql-show=true
